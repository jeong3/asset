<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springBootMVCAsset.mapper.GoodsMapper">

<sql id="BaseColumns">
	   goods_Num , goods_name , goods_price ,goods_contents , emp_num  
	  ,regist_date , MAIN_IMAGE ,MAIN_STORE_IMAGE 
	  ,DETAIL_IMAGE ,DETAIL_STORE_IMAGE, goods_kind, sale
</sql>

<insert id="goodsInsert" parameterType="goodsDTO">
insert into goods ( <include refid="BaseColumns" /> )
values(#{goodsNum}, #{goodsName}, #{goodsPrice}, #{goodsContents}
		,null, sysdate, 
		#{mainImage}, #{mainStoreImage},
		<if test="detailImage != null">
		#{detailImage},#{detailStoreImage},
		</if>
		<if test="detailImage == null">
		null,null,
		</if>
		#{goodsKind}, null)
</insert>

<select id="goodsAllSelect" resultType="goodsDTO" parameterType="String">
select * from goods where goods_Kind = #{goodsKind}
</select>

<select id="goodsSelectAll" resultType="goodsDTO" parameterType="String">
select * from goods
</select>

<select id="goodsSelectOne" parameterType="String" resultType="goodsDTO">
select * from goods where goods_num = #{goodsNum}
</select>

<update id="goodsUpdate" parameterType="goodsDTO"> 
update goods
<trim prefix="set" suffixOverrides=",">
	 GOODS_NAME = #{goodsName}, GOODS_PRICE = #{goodsPrice}
	,GOODS_CONTENTs = #{goodsContents}
	,GOODS_KIND = #{goodsKind, jdbcType=VARCHAR}
    <if test="mainImage != null">
    ,MAIN_IMAGE = #{mainImage}
    ,MAIN_STORE_IMAGE = #{mainStoreImage}
    </if>
    <if test="detailImage != null ">
    ,DETAIL_IMAGE = #{detailImage}
    ,DETAIL_STORE_IMAGE = #{detailStoreImage}
    </if>
</trim>
where goods_num = #{goodsNum}
</update>

<delete id="goodsDelete" parameterType="string">
delete from goods
where goods_num = #{goodsNum}

</delete>

<resultMap type="goodsDTO" id="goodsResultMap">
	<constructor>
		<idArg column="goods_Num" jdbcType="VARCHAR" javaType="string"/>
		<arg column="goods_Name" jdbcType="VARCHAR" javaType="string" />
		<arg column="goods_Contents" javaType="string" jdbcType="VARCHAR" />
		<arg column="GOODS_PRICE" jdbcType="BIGINT" javaType="integer" />
		<arg column="emp_Num" javaType="string" jdbcType="VARCHAR" />
		<arg column="goods_kind" javaType="string" jdbcType="VARCHAR" />
		<arg column="Regist_date" javaType="java.util.Date" jdbcType="DATE" />
		<arg column="MAIN_IMAGE" javaType="string" jdbcType="VARCHAR" />
		<arg column="MAIN_STORE_IMAGE" javaType="string" jdbcType="VARCHAR" />
		<arg column="DETAIL_IMAGE" javaType="string" jdbcType="VARCHAR" />
		<arg column="DETAIL_STORE_IMAGE" javaType="string" jdbcType="VARCHAR" />
		<arg column="SALE" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />		
	</constructor>
</resultMap>	
<select id="allSelect" resultMap="goodsResultMap">
    select * from (
        select ROW_NUMBER() over (order by goods_num desc) as rn,
               <include refid="BaseColumns" />
        from goods
        <where>
            <if test="goodsKind != null and goodsKind != ''">
                and goods_kind = #{goodsKind}
            </if>
            <if test="searchWord != null and searchWord != ''">
                and (goods_name like '%' || #{searchWord} || '%'
                or goods_contents like '%' || #{searchWord} || '%')
            </if>
        </where>
    )
    where rn between #{startRow} and #{endRow}
</select>

<select id="goodsLoadMoreSelect">
	select * from (
        select ROW_NUMBER() over (order by goods_num desc) as rn,
               <include refid="BaseColumns" />
        from goods
        <where>
            <if test="goodsKind != null and goodsKind != ''">
                and goods_kind = #{goodsKind}
            </if>
            <if test="searchWord != null and searchWord != ''">
                and (goods_name like '%' || #{searchWord} || '%'
                or goods_contents like '%' || #{searchWord} || '%')
            </if>
        </where>
    )
    where rn between #{startRow} and #{endRow}
</select>

<select id="goodsKindSearchCount" resultType="int">
    select count(*) 
    from goods
    <where>
        <if test="goodsKind != null and goodsKind != ''">
            goods_kind = #{goodsKind}
        </if>
        <if test="searchWord != null and searchWord != ''">
            and (goods_name like '%' || #{searchWord} || '%'
            or goods_contents like '%' || #{searchWord} || '%')
        </if>
    </where>
</select>

<select id="goodsKindCount">
select count(*) from goods where goods_kind = #{goodsKind} 
</select>

<select id="goodsCount">
select count(*) from goods
</select>

<select id="selectEndPrice">
select close
from (
        select LAST_VALUE(execution_price) OVER (PARTITION BY TO_CHAR(deal_date, 'YYYY-MM-DD') ORDER BY deal_time ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS close
        ,ROW_NUMBER() OVER (ORDER BY deal_time ASC) AS rn
        FROM
        stock_data
) t
WHERE t.rn = 1
</select>
</mapper>