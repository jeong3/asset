<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springBootMVCAsset.mapper.GoalMapper">
<sql id="BaseColumns">
 		GOAL_NUM, GOAL_NAME, GOAL_CONTENTS, GOAL_PRICE, CURRENT_PRICE, 
        GOAL_RATE, START_DATE, END_DATE, MEMBER_NUM
</sql>
<insert id="goalRegist1" parameterType="goalDTO">
    INSERT INTO goal (
        GOAL_NUM, GOAL_NAME, GOAL_CONTENTS, GOAL_PRICE, CURRENT_PRICE, 
        GOAL_RATE, START_DATE, END_DATE, MEMBER_NUM
    )
    VALUES (
        #{goalNum}, #{goalName}, #{goalContents}, #{goalPrice},
        CASE 
            WHEN SYSDATE >= #{startDate} THEN (
                SELECT NVL(SUM(deal_price), 0)
                FROM deal
                WHERE member_num = #{memberNum}
                AND category_name = '저축'
                AND deal_date BETWEEN #{startDate} AND SYSDATE
            )
            ELSE 0
        END,
       	CASE 
		    WHEN SYSDATE >= #{startDate} THEN 
		        CASE 
		            WHEN NVL((
		                SELECT SUM(deal_price)
		                FROM deal
		                WHERE member_num = #{memberNum}
		                AND category_name = '저축'
		                AND deal_date BETWEEN #{startDate} AND SYSDATE
		            ), 0) = 0 THEN 0
		            ELSE 
		            	NVL((
		                	SELECT SUM(deal_price)
		                    FROM deal
		                    WHERE member_num = #{memberNum}
		                    AND category_name = '저축'
		                    AND deal_date BETWEEN #{startDate} AND SYSDATE
		                ), 1) / #{goalPrice} * 100
		        END
    		ELSE 0
		END,
        #{startDate}, #{endDate}, #{memberNum})
</insert>

<insert id="goalRegist2">
 INSERT INTO goal (
        GOAL_NUM, GOAL_NAME, GOAL_CONTENTS, GOAL_PRICE, CURRENT_PRICE, 
        GOAL_RATE, START_DATE, END_DATE, MEMBER_NUM
    )
    values(
    	#{goalNum}, #{goalName}, #{goalContents}, #{goalPrice},
    	CASE 
            WHEN SYSDATE >= #{startDate} THEN (
                SELECT NVL(SUM(deal_price), 0)
                FROM deal
                WHERE member_num = #{memberNum}
                AND category_name = '지출'
                AND deal_date BETWEEN #{startDate} AND SYSDATE
            )
            ELSE 0
        END,
        CASE 
		    WHEN SYSDATE >= #{startDate} THEN 
		        CASE 
		            WHEN NVL((
		                SELECT SUM(deal_price)
		                FROM deal
		                WHERE member_num = #{memberNum}
		                AND category_name = '지출'
		                AND deal_date BETWEEN #{startDate} AND SYSDATE
		            ), 0) = 0 THEN 100
		            ELSE 
		            	(1 - 
		                NVL((
		                    SELECT SUM(deal_price)
		                    FROM deal
		                    WHERE member_num = #{memberNum}
		                    AND category_name = '지출'
		                    AND deal_date BETWEEN #{startDate} AND SYSDATE
		                ), 1) / #{goalPrice}) * 100
		        END
    		ELSE 100
		END,
		#{startDate}, #{endDate}, #{memberNum})
</insert>

<select id="goalRunList" parameterType="string" resultType="goalDTO">
select row_number() over(order by end_date) as myGoalNum,
	<include refid="BaseColumns"/>
from goal
	where member_num = #{memberNum}
	and trunc(end_date) >= trunc(sysdate)
</select>

<select id="goalRunCount" parameterType="string" resultType="Integer">
select count(*) from goal
where member_num = #{memberNum}
and trunc(end_date) >= trunc(sysdate)
</select>

<select id="goalFinishList" parameterType="string" resultType="goalDTO">
select row_number() over(order by end_date) as myGoalNum,
	<include refid="BaseColumns"/>
from goal
	where member_num = #{memberNum}
	and trunc(sysdate) > trunc(end_date)
</select>

<select id="goalFinishCount" parameterType="string" resultType="Integer">
select count(*) from goal
where member_num = #{memberNum}
and trunc(sysdate) > trunc(end_date)
</select>

<select id="goalDetail" parameterType="string" resultType="goalDTO">
select <include refid="BaseColumns"/>
	, (GOAL_PRICE - CURRENT_PRICE) as remainPrice
	, (TRUNC(end_date) - TRUNC(SYSDATE)) as remainDate
from goal
where goal_num = #{goalNum}
</select>

<update id="goalUpdate1" parameterType="goalDTO">
update goal
set GOAL_CONTENTS = #{goalContents},
	GOAL_PRICE = #{goalPrice},
	CURRENT_PRICE = CASE 
            WHEN SYSDATE >= #{startDate} THEN (
                SELECT NVL(SUM(deal_price), 0)
                FROM deal
                WHERE member_num = #{memberNum}
                AND category_name = '저축'
                AND deal_date BETWEEN #{startDate} AND SYSDATE
            )
            ELSE 0
        END,
    GOAL_RATE = CASE 
		    WHEN SYSDATE >= #{startDate} THEN 
		        CASE 
		            WHEN NVL((
		                SELECT SUM(deal_price)
		                FROM deal
		                WHERE member_num = #{memberNum}
		                AND category_name = '저축'
		                AND deal_date BETWEEN #{startDate} AND SYSDATE
		            ), 0) = 0 THEN 0
		            ELSE 
		            	NVL((
		                	SELECT SUM(deal_price)
		                    FROM deal
		                    WHERE member_num = #{memberNum}
		                    AND category_name = '저축'
		                    AND deal_date BETWEEN #{startDate} AND SYSDATE
		                ), 1) / #{goalPrice} * 100
		        END
    		ELSE 0
		END,
	START_DATE = #{startDate},
	END_DATE = #{endDate}
where goal_num = #{goalNum}
</update>

<update id="goalUpdate2" parameterType="goalDTO">
update goal
set GOAL_CONTENTS = #{goalContents},
	GOAL_PRICE = #{goalPrice},
	CURRENT_PRICE = CASE 
            WHEN SYSDATE >= #{startDate} THEN (
                SELECT NVL(SUM(deal_price), 0)
                FROM deal
                WHERE member_num = #{memberNum}
                AND category_name = '지출'
                AND deal_date BETWEEN #{startDate} AND SYSDATE
            )
            ELSE 0
        END,
    GOAL_RATE = CASE 
		    WHEN SYSDATE >= #{startDate} THEN 
		        CASE 
		            WHEN NVL((
		                SELECT SUM(deal_price)
		                FROM deal
		                WHERE member_num = #{memberNum}
		                AND category_name = '지출'
		                AND deal_date BETWEEN #{startDate} AND SYSDATE
		            ), 0) = 0 THEN 100
		            ELSE 
		            	(1 - 
		                NVL((
		                    SELECT SUM(deal_price)
		                    FROM deal
		                    WHERE member_num = #{memberNum}
		                    AND category_name = '지출'
		                    AND deal_date BETWEEN #{startDate} AND SYSDATE
		                ), 1) / #{goalPrice}) * 100
		        END
    		ELSE 100
		END,
	START_DATE = #{startDate},
	END_DATE = #{endDate}
where goal_num = #{goalNum}
</update>

<delete id="goalDelete" parameterType="string">
delete from goal
where goal_num = #{goalNum}
</delete>
</mapper>