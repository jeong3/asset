<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springBootMVCAsset.mapper.NewsMapper">

<sql id="BaseColumns">
	NEWS_NUM, NEWS_CONTENTS, REGIST_DATE, UPDATE_DATE, NEWS_TITLE, IMAGE, STORE_IMAGE, EMP_NUM, UPDATE_EMP_NUM, IMAGE_TITLE, IMAGE_CONTENTS, visit_count
</sql>

<insert id="newsInsert">
	insert into news ( <include refid="BaseColumns" /> )
	values ( #{newsNum}, #{newsContents}, sysdate, null, #{newsTitle}, #{image}, #{storeImage}
	, #{empNum}, null, #{imageTitle}, #{imageContents}, 0 )
</insert>

<select id="newsSelectAll">
	select * from (select row_number() over(order by news_num desc) rn
	, <include refid="BaseColumns" /> from news 
	<where>
			<if test="searchWord !=null">
				NEWS_CONTENTS like '%'||#{searchWord}||'%' or
				NEWS_TITLE like '%'||#{searchWord}||'%' or
				IMAGE_TITLE like '%'||#{searchWord}||'%'
			</if>
		</where>
	)  
	where rn between #{startRow} and #{endRow}
</select>

<select id="newsLoadMoreSelect">
	select * from (select row_number() over(order by news_num desc) rn
	, <include refid="BaseColumns" /> from news 
	<where>
			<if test="searchWord !=null">
				NEWS_CONTENTS like '%'||#{searchWord}||'%' or
				NEWS_TITLE like '%'||#{searchWord}||'%' or
				IMAGE_TITLE like '%'||#{searchWord}||'%'
			</if>
		</where>
	)  
	where rn between #{startRow} and #{endRow}
</select>

<select id="newsCount">
	select count(*) from news
	<where>
			<if test="searchWord !=null">
				NEWS_CONTENTS like '%'||#{searchWord}||'%' or
				NEWS_TITLE like '%'||#{searchWord}||'%' or
				IMAGE_TITLE like '%'||#{searchWord}||'%'
			</if>
		</where>
</select>

<select id="newsSelectOne">
	select <include refid="BaseColumns" /> from news where news_num = #{newsNum}
</select>

<update id="newsUpdate">
	update news set
	NEWS_CONTENTS = #{newsContents}
	, UPDATE_DATE = sysdate
	, NEWS_TITLE = #{newsTitle}
	<if test="image != null">
	, IMAGE = #{image}
	, STORE_IMAGE = #{storeImage}
	</if>
	, UPDATE_EMP_NUM = #{updateEmpNum}
	, IMAGE_TITLE = #{imageTitle}
	, IMAGE_CONTENTS = #{imageContents}
	where news_num = #{newsNum}
</update>

<delete id="newsDelete">
	delete from news where news_num = #{newsNum}
</delete>

<update id="countUpdate">
	update news set
	visit_count = visit_count + 1
	where news_num = #{news_num}
</update>

<update id="updateLikeCount">
	merge into news_analyze na
		using (SELECT news_num FROM news WHERE news_num = #{newsNum} ) n
		on (na.news_num = n.news_num and member_id = #{memberId})
		when matched then
  		  update set recommend_date = sysdate
	    where na.news_num = #{newsNum} 
	      and member_id = #{memberId}
	    delete where na.news_num = #{newsNum}  and member_Id = #{memberId}
		when not matched then
		   INSERT (news_num, member_id, recommend_date) 
          VALUES (#{newsNum}, #{memberId}, sysdate)
</update>

<select id="newsAnalyzeSelect">
	select recommend_date from news_analyze 
	where news_num = #{newsNum} and member_Id = #{memberId}
</select>

<select id="newsAnalyzeCount">
	select count(*) from news_analyze where news_num = #{newsNum}
</select>

<insert id="commentInsert" parameterType="newsCommentDTO">
	insert into news_comment (COMMENT_NUM, MEMBER_ID, COMMENT_CONTENTS, COMMENT_DATE, NEWS_NUM)
	values ((select nvl(max(comment_num),0)+1 from news_comment), #{memberId}, #{commentContents}, sysdate, #{newsNum})
</insert>

<select id="commentSelectAll" parameterType="string" resultType="newsCommentDTO">
	select COMMENT_NUM, MEMBER_ID, COMMENT_CONTENTS, COMMENT_DATE, NEWS_NUM from news_comment
	where news_num = #{newsNum}
</select>

<update id="newsSaveUpdate" parameterType="string">
	 merge into save s
		using (SELECT news_num FROM news WHERE news_num = #{newsNum} ) n
		on (s.news_num = n.news_num and member_num = #{memberNum})
		when matched then
  		  update set save_date = sysdate
	    where s.news_num =  #{newsNum}
	      and member_num = #{memberNum}
	    delete where s.news_num = #{newsNum}  and member_num = #{memberNum}
		when not matched then
		  insert (member_num, news_num, save_date)
         values (#{memberNum}, #{newsNum}, sysdate)
</update>
<select id="newsSaveSelect">
	select save_date from save 
	where news_num = #{newsNum} and member_num = #{memberNum}
</select>

<delete id="commentDelete">
	delete from news_comment where comment_num = #{commentNum}
</delete>

<resultMap type="myNewsDTO" id="myNewsResultMap">
	<result column=""/>
</resultMap>



<resultMap type="myNewsDTO" id="myNewsResultMap_">
	<result column="member_num" jdbcType="VARCHAR" property="memberNum"/>
    <result column="news_num" jdbcType="VARCHAR" property="newsNum"/>
    <result column="save_date" jdbcType="DATE" property="saveDate"/>
    <association property="newsDTO" javaType="newsDTO">
        <result column="news_contents" jdbcType="VARCHAR" property="newsContents"/>
        <result column="store_image" jdbcType="VARCHAR" property="storeImage"/>
        <result column="news_title" jdbcType="VARCHAR" property="newsTitle"/>
    </association>
</resultMap>

<select id="myNewsSelect" resultMap="myNewsResultMap_">
    select member_num, save_date,
           s.news_num, news_contents, store_image, news_title
    from save s
    join news n on s.news_num = n.news_num
    where member_num = #{memberNum}
</select>

<resultMap type="myNewsLikeDTO" id="myNewsLikeResultMap">
	<result column="member_id" jdbcType="VARCHAR" property="memberId"/>
    <result column="news_num" jdbcType="VARCHAR" property="newsNum"/>
    <result column="recommend_date" jdbcType="DATE" property="recommendDate"/>
    <association property="newsDTO" javaType="newsDTO">
        <result column="news_contents" jdbcType="VARCHAR" property="newsContents"/>
        <result column="store_image" jdbcType="VARCHAR" property="storeImage"/>
        <result column="news_title" jdbcType="VARCHAR" property="newsTitle"/>
    </association>

</resultMap>

<select id="myNewsSelect_Like" resultMap="myNewsLikeResultMap">
	select member_id, recommend_date,
           na.news_num, news_contents, store_image, news_title
    from news_analyze na
    join news n on na.news_num = n.news_num
    where member_id = #{memberId}
</select>

</mapper>